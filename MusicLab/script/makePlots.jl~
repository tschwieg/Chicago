using CSV
using LinearAlgebra
using DataFrames
using Plots
pyplot()



function GenerateMarketSharePlots( filename,tit )

    data = CSV.File( filename, header=["ID","w1","w2","w3","w4","w5","w6","w7","w8","ind"]) |> DataFrame

    #Do :ind seperately so the plotting goes easier
    cols = [:w1,:w2,:w3,:w4,:w5,:w6,:w7,:w8]

    #Calculate Market Share as described in the paper
    for col in cols
        data[col] = data[col] ./ sum( data[col])
    end

    data[:ind] = data[:ind] ./ sum( data[:ind])
    
    plt = plot( xlims=(0, .05), ylims = (0,.2), legend = false, xlabel="\$\\mathbf{m_{indep}}\$", ylabel="\$\\mathbf{m_{influence}}\$",  annotations = [(.008,0.19,"\$\\mathbf{Exp. "*string(tit)*"}\$")])

    
    

    ident = range(0,stop=.2,length=500)
    plot!( ident, ident, color=:grey, linestyle = :dot )


    #Now we need to get the third degree polynomial fit
    #We will accomplish this with least squares regression.

    #He omits the constant in order to have a y-intercept of 0.
    #I'm not sure I agree but I don't see any discussion of it.

    X = ones( nrow(data)*8, 3 )
    Y = ones(nrow(data)*8)

    #There is probably a cleaner way to fill this matrix, but this works
    for i in 1:nrow(data)
        X[(8*(i-1)+1):8*i,1] .= data[:ind][i]
        X[(8*(i-1)+1):8*i,2] .= data[:ind][i]^2
        X[(8*(i-1)+1):8*i,3] .= data[:ind][i]^3
        for j in 1:8
            Y[(8*(i-1)+j)] = data[cols[j]][i]
        end
    end

    F = cholesky( X'*X )

    #F.L * F.U = X' * X
    #β = (X' X) \ ( X' Y)

    β = F.U \ (F.L \ X' * Y)

    polyfit( x ) = β'*[x,x*x,x*x*x]

    newident = range( 0, stop=maximum(data[:ind]),length=500)

    plot!( newident, polyfit.( newident), color = :darkgrey )

    for col in cols
        plot!( data[:ind], data[col], seriestype=:scatter, show = true, markeralpha = 0, markersize=2, markercolor=:black)
    end

    return plt
end

function GenerateMarketRankPlots( data, tit )

     data = CSV.File( filename, header=["ID","w1","w2","w3","w4","w5","w6","w7","w8","ind"]) |> DataFrame

    #Do :ind seperately so the plotting goes easier
    cols = [:w1,:w2,:w3,:w4,:w5,:w6,:w7,:w8]

    popRank = sort( copy( unique(data[:ind])), rev = true)

    
    plt = plot( xlims=(0, 50), xticks = 0:12:48, ylims = (0,50), yticks = 0:12:48, xflip = true, yflip = true, legend = false, xlabel="\$\\mathbf{Rank: m_{indep}}\$", ylabel="\$\\mathbf{Rank: m_{influence}}\$",  annotations = [(40,3,"\$\\mathbf{Exp. "*string(tit)*"}\$")] )#title="\$\\mathbf{Exp. "*string(tit)*"}\$", titleloc = :left)


    function rankme( item, list )
        s = sort(list, rev = true)
        for  i in 1:length(s)
            if( item >= s[i])
                return i
            end
        end
        return -1
    end

    ident = range(0,stop=50,length=500)
    plot!( ident, ident, color=:grey, linestyle = :dot )

    for i in 1:length(popRank)
        rows = findall( isequal( popRank[i] ), data[:ind] )
        x = repeat( [rankme(popRank[i], data[:ind])], 8)
        y = [rankme(data[r,col],data[:,col]) for r in rows for col in cols]
        plot!( x, y, seriestype=:scatter, show = true, markeralpha = 0, markersize=2, markercolor=:black)
    end

    

    return plt
end


filename = "downloads_v1_lexorder.txt"
p1 = GenerateMarketSharePlots(filename,1)
#savefig( "../p1.pdf")
p2 = GenerateMarketRankPlots(filename,1)
#savefig( "../p2.pdf")

filename = "downloads_v2_lexorder.txt"
p3 = GenerateMarketSharePlots(filename,2)
#savefig( "../p3.pdf")
p4 = GenerateMarketRankPlots(filename,2)
#savefig( "../p4.pdf")

plot(p1,p2,p3,p4,layout=grid( 2,2, widths=[.6,.35,.6,.35]),legend=false)
savefig( "../Plot.pdf")
